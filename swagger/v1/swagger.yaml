---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/admin/custom_fields":
    get:
      summary: list custom_fields
      responses:
        '200':
          description: successful
    post:
      summary: create custom_field
      responses:
        '200':
          description: successful
  "/api/admin/custom_fields/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show custom_field
      responses:
        '200':
          description: successful
    patch:
      summary: update custom_field
      responses:
        '200':
          description: successful
    put:
      summary: update custom_field
      responses:
        '200':
          description: successful
    delete:
      summary: delete custom_field
      responses:
        '200':
          description: successful
  "/api/sign_in":
    post:
      summary: create authentication
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/sign_out":
    delete:
      summary: delete authentication
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/categories":
    get:
      summary: list categories
      tags:
      - Categories
      parameters:
      - name: page
        in: query
        description: Page for pagination
        required: false
        schema:
          type: integer
      - name: items
        in: query
        description: Number of items per page
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: successful
  "/api/listings":
    post:
      summary: create listing
      tags:
      - Listings
      security:
      - Bearer: {}
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                profile_id:
                  type: integer
                category_id:
                  type: integer
  "/api/listings/{id}":
    patch:
      summary: update listing
      tags:
      - Listings
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Listing ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                profile_id:
                  type: integer
                category_id:
                  type: integer
    delete:
      summary: delete listing
      tags:
      - Listings
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Listing ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/categories/{category_id}/listings":
    parameters:
    - name: category_id
      in: path
      description: category_id
      required: true
      schema:
        type: string
    get:
      summary: list listings
      tags:
      - Listings
      parameters:
      - name: page
        in: query
        description: Page for pagination
        required: false
        schema:
          type: integer
      - name: items
        in: query
        description: Number of items per page
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: successful
  "/api/categories/{category_id}/listings/{id}":
    parameters:
    - name: category_id
      in: path
      description: category_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show listing
      tags:
      - Listings
      responses:
        '200':
          description: successful
  "/api/passwords":
    patch:
      summary: update password
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/profiles/{id}/toggle":
    post:
      summary: toggle profile
      tags:
      - Profiles
      parameters:
      - name: id
        in: path
        description: profile id
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      security:
      - Bearer: {}
      responses:
        '200':
          description: successful
  "/api/profiles":
    get:
      summary: list profiles
      tags:
      - Profiles
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: page
        in: query
        description: Page for pagination
        required: false
        schema:
          type: integer
      - name: items
        in: query
        description: Number of items per page
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: successful
    post:
      summary: create profile
      tags:
      - Profiles
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/profiles/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show profile
      tags:
      - Profiles
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
    patch:
      summary: update profile
      tags:
      - Profiles
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
    put:
      summary: update profile
      tags:
      - Profiles
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
    delete:
      summary: delete profile
      tags:
      - Profiles
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/sign_up":
    post:
      summary: create registration
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/tokens":
    post:
      summary: create token
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/me":
    get:
      summary: show user
      tags:
      - Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
servers:
- url: http://localhost:3000
components:
  securitySchemes:
    Bearer:
      description: Auth token
      type: apiKey
      name: Authorization
      in: header
